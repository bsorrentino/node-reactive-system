var{tap:e}=require("rxjs/operators"),{interval:n}=require("rxjs"),{Bus:s}=require("rxbus");function i(e,n,s){return n in e?Object.defineProperty(e,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[n]=s,e}class t{constructor(){i(this,"name","MyModule")}get myChannel(){return this._myChannel}onRegister(){this._myChannel=s.channels.newChannel(`${this.name}/channel`)}onStart(){this._subscription=s.channels.channel("TimerModule/channel").subscribe({next:e=>console.log("time",e)})}onStop(){this._subscription&&(this._subscription.unsubscribe(),this._subscription=void 0)}}class r{constructor(){i(this,"name","TimeModule")}get myChannel(){return this._myChannel}onRegister(){this._myChannel=s.channels.newChannel(`${this.name}/channel`)}onStart(){this._subscription=n(1e3).pipe(e((e=>console.log("tick",e)))).subscribe(this._myChannel)}onStop(){this._subscription&&(this._subscription.unsubscribe(),this._subscription=void 0)}}s.modules.registerModule(new t),s.modules.registerModule(new r),s.modules.start();
//# sourceMappingURL=rxsample.js.map
