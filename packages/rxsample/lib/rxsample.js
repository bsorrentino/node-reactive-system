var{FastifyModule:e}=require("@soulsoftware/rxbus-fastify"),{tap:n}=require("rxjs/operators"),{interval:s}=require("rxjs"),{Bus:t}=require("@soulsoftware/rxbus");function i(e,n,s){return n in e?Object.defineProperty(e,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[n]=s,e}class r{constructor(){i(this,"name","MyModule")}get myChannel(){return this._myChannel}onRegister(){this._myChannel=t.channels.newChannel(`${this.name}/channel`)}onStart(){this._subscription=t.channels.channel("TimerModule/channel").subscribe({next:e=>console.log(`${this.name} got time:`,e)})}onStop(){this._subscription&&(this._subscription.unsubscribe(),this._subscription=void 0)}}class o{constructor(){i(this,"name","TimerModule")}get myChannel(){return this._myChannel}onRegister(){this._myChannel=t.channels.newChannel(`${this.name}/channel`)}onStart(){this._subscription=s(1e3).pipe(n((e=>console.log(`${this.name} emit `,e)))).subscribe(this._myChannel)}onStop(){this._subscription&&(this._subscription.unsubscribe(),this._subscription=void 0)}}!function(){console.log("start"),new e,t.modules.registerModule(new r),t.modules.registerModule(new o);for(let e of t.channels.channelNames)console.log(e,"registerd");t.modules.start()}();
//# sourceMappingURL=rxsample.js.map
