{"mappings":"IAWgCA,KAAAA,uBAClBA,EAAEC,WAAaD,EAAEE,QAAUF,6DCNlC,MACMG,OAASC,IACTC,KAAO,uCAISC,KAAKC,WAE9BC,mBACUC,EAAAA,GAAiBH,KAAKD,eAC5BC,KAAKC,WAAaG,EAAIC,SAASC,WAAYH,GAE3CH,KAAKH,OAAOU,IAAAA,IAAQJ,QAAkB,CAACK,EAASC,KAE5CT,KAAKC,YAAYS,OAAMF,EAAQG,OAC/BF,EAAMG,OAAQ,QAKtBC,UACIb,KAAKH,OAAOiB,OAAO,MAAM,CAACC,EAAKC,KACvBD,EACAE,QAAQC,MAAMH,GAGdE,QAAQE,IAAAA,uBAA2BH,QAK/CI,SACIpB,KAAKH,OAAOwB,QAAQC,MAAMC,GAAKN,QAAQE,IAAK","sources":["../../node_modules/@parcel/scope-hoisting/lib/helpers.js","./src/index.ts"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","import { Bus } from '@soulsoftware/rxbus'\nimport { MessageBus } from '@soulsoftware/bus-module'\n\nimport fastify from 'fastify'\nimport { Subject } from 'rxjs'\n\nexport class FastifyModule implements MessageBus.Module {\n    private  server = fastify()\n    readonly name = \"FastifyModule\"\n    \n    private _myChannel?:Subject<any>\n\n    get myChannel() { return this._myChannel }\n\n    onRegister() {\n        const channelName = `${this.name}/channel`\n        this._myChannel = Bus.channels.newChannel( channelName )\n\n        this.server.get(`'${channelName}/*'`, (request, reply) => {\n            \n            this._myChannel?.next( request.query )\n            reply.status( 200 )\n        })\n          \n    }\n\n    onStart() {\n        this.server.listen(8080, (err, address) => {\n            if (err) {\n                console.error(err)\n            }\n            else {\n                console.log(`Server listening at ${address}`)\n            }\n          })    \n    }\n\n    onStop() {\n        this.server.close().then( v => console.log( 'server closed!') )\n    }\n}"],"names":["a","__esModule","default","server","_fastify","name","this","_myChannel","onRegister","channelName","Bus","channels","newChannel","get","request","reply","next","query","status","onStart","listen","err","address","console","error","log","onStop","close","then","v"],"version":3,"file":"index.js.map"}