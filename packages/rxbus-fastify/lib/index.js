var e,{timeout:s}=require("rxjs/operators"),r=(e=require("fastify"))&&e.__esModule?e.default:e;require("@soulsoftware/rxmq");var t=require("fastify-websocket"),{Bus:n}=require("@soulsoftware/rxbus");function a(e,s,r){return s in e?Object.defineProperty(e,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[s]=r,e}const o={WSSend:"ws.send",WSMessage:"ws.message",WSAdd:"ws.add",ServerStart:"server.start",ServerClose:"server.close"};exports.Subjects=o;const c=new class{constructor(){a(this,"server",r({})),a(this,"name","fastify")}setupWebSocketChannel(e){const s=e,r=n.channels.channel(s).subject(o.WSMessage),t=r.asObservable();this.server.get(`/${this.name}/channel/${s}/*`,{websocket:!0},((e,s)=>{e.socket.on("message",(e=>r.next(e))),t.subscribe((s=>{console.log("ws send",s),e.socket.send(s)}))}))}onRegister(){const e=n.channels.requestChannel(this.name),r=new RegExp(`/${this.name}/channel/([\\w]+)([?].+)?`);this.server.get(`/${this.name}/channel/*`,(async(t,n)=>{const a=r.exec(t.url);a?e.request({topic:a[1],data:t}).pipe(s(5e3)).subscribe({next:e=>n.send(e),error:e=>n.code(500).send(e),complete:()=>{}}):n.status(404).send("command not found!"),await n})),this.server.register(t,{}),n.channels.requestChannel(this.name).observe(o.WSAdd).subscribe((({data:e,replySubject:s})=>{console.log("request add channel ",e),this.setupWebSocketChannel(e),s.complete()}))}onStart(){const e=this.name;this.server.listen(8080,((s,r)=>{s?(console.error(s),n.channels.channel(e).subject(o.ServerStart).error(s)):(console.log(`Server listening at ${r}`),n.channels.channel(e).subject(o.ServerStart).next({address:r}))}))}onStop(){this.server.close().then((e=>{console.log("server closed!"),n.channels.channel(this.name).subject(o.ServerClose).complete()}))}};exports.Module=c;