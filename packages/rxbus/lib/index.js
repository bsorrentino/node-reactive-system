function e(e){return e&&e.__esModule?e.default:e}var s=e(require("@soulsoftware/rxmq")),t=e(require("assert"));class r{_modules=new Map;register(e,s){t.ok(!this._modules.has(e.name),`Module ${e.name} already exists!`);let r={module:e,status:{started:!1,paused:!1}};this._modules.set(e.name,r),e.onRegister&&e.onRegister(s)}get names(){return this._modules.keys()}start(){this._modules.forEach((e=>{e.status.started||(e.module.onStart&&e.module.onStart(),e.status.started=!0)}))}}const n=new class{modules=new r;channel(e){return s.channel(e)}replyChannel(e){return s.channel(e)}workerChannel(e){const s=`WORKER${e.threadId}`,t=this.channel(s),r=t.subject("WORKER_OUT");e.on("message",(e=>r.next(e))),e.on("error",(e=>r.error(e))),e.on("exit",(()=>r.complete()));const n=t.subject("WORKER_IN");return n.subscribe((s=>e.postMessage(s))),{in:n,out:r.asObservable()}}get channelNames(){return s.channelNames()}};exports.Bus=n;