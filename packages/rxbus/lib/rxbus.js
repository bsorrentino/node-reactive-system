var e,s=require("rxjs").Subject,t=(e=require("assert"))&&e.__esModule?e.default:e;let n;!function(e){class n{_channels=new Map;newChannel(e){t.ok(!this._channels.has(e),`Channel ${e} already exists!`);let n=new s;return this._channels.set(e,n),n}channel(e){return t.ok(this._channels.has(e),`Channel ${e} doesn't exists!`),this._channels.get(e).asObservable()}}class a{_modules=new Map;registerModule(e){t.ok(!this._modules.has(e.name),`Module ${e.name} already exists!`);let s={module:e,status:{started:!1,paused:!1}};this._modules.set(e.name,s)}start(){this._modules.forEach((e=>{e.status.started||(e.module.onStart&&e.module.onStart(),e.status.started=!0)}))}}e.Engine=class{channels=new n;modules=new a}}(n||(n={}));const a=new n.Engine;exports.Bus=a;
//# sourceMappingURL=rxbus.js.map
